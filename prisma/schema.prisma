// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Issue {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(32)
  surname     String   @db.VarChar(32)
  teamId      Int
  team        Team     @relation(fields: [teamId], references: [id])
  groupId     Int
  group       Group    @relation(fields: [groupId], references: [id])
  phone       String   @db.VarChar(10)
  problemId   Int
  problem     Problem  @relation(fields: [problemId], references: [id])
  detail      String   @db.Text
  status      Status   @default(OPEN)
  createdAt   DateTime @default(now())
  isCompleted Boolean  @default(false)

  officerId    String?
  officer      User?     @relation(fields: [officerId], references: [id])
  fixStartDate DateTime?
  fixEndDate   DateTime?
  fixResult    String?   @db.Text
  note         String?   @db.Text

  @@index([teamId])
  @@index([groupId])
  @@index([problemId])
  @@index([officerId])
}

model Team {
  id        Int      @id @default(autoincrement())
  label     String   @unique
  abb       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  issue     Issue[]
  group     Group[]
}

model Group {
  id        Int      @id @default(autoincrement())
  label     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  issue     Issue[]
  teamId    Int
  team      Team     @relation(fields: [teamId], references: [id])

  @@unique(fields: [label, teamId], name: "labelTeam")
  @@index([teamId])
}

model Problem {
  id        Int      @id @default(autoincrement())
  label     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  issue     Issue[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  surname   String
  createdAt DateTime @default(now())
  issue     Issue[]
  role      Role     @default(OFFICER)
}

enum Status {
  OPEN
  ACKNOWLEDGE
  IN_PROGRESS
  NOTIFY
  CANT_FIX
  CANCELED
  CLOSED
}

enum Role {
  ADMIN
  OFFICER
}
